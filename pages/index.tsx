import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import useSWR from "swr";
import Comments from "../components/comment/list";
import Modal from "../components/ui/modal";
import { Colors } from "../enums/colors";
import styles from "../styles/Home.module.css";
import * as Types from "../types/comment";
import * as Styles from "./index.styles";

const fetcher = async (url: string) => {
  const response = await fetch(url);
  const data = await response.json();

  if (response.status !== 200) {
    throw new Error(data.message);
  }

  return data;
};

const Home: NextPage = () => {
  const { data, error } = useSWR("/api/comments", fetcher);

  const [commentIdToDelete, setCommentIdToDelete] = useState(0);
  const [show, setShow] = useState(false);

  const deleteComment = (id: number) => {
    alert(`${id} is deleted!`);
  };

  //#region Event handlers

  const handleClickCancelDelete = () => {
    setCommentIdToDelete(0);
    setShow(false);
  };

  const handleClickConfirmDelete = () => {
    deleteComment(commentIdToDelete);
    setShow(false);
  };

  //#endregion

  if (error) return <div>Failed to load</div>;
  if (!data) return <div>Loading...</div>;

  const { comments, currentUser } = data;

  const propsComments = {
    setCommentIdToDelete,
    setShow,
    comments: comments as Types.Comment[],
    currentUser: currentUser as Types.User,
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Frontend Mentor | Interactive Comment Section</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Styles.Main>
        <Comments props={propsComments} />
        <Modal show={show}>
          <p>Delete comment</p>
          <p>
            Are you sure you want to delete this comment? This will remove the
            comment and can&lsquo;t be undone.
          </p>
          <Styles.Button
            backgroundColor={Colors.GRAYISH_BLUE}
            onClick={handleClickCancelDelete}
          >
            NO, CANCEL
          </Styles.Button>
          <Styles.Button
            backgroundColor={Colors.SOFT_RED}
            onClick={handleClickConfirmDelete}
          >
            YES, DELETE
          </Styles.Button>
        </Modal>
      </Styles.Main>

      <footer className={styles.attribution}>
        Challenge by{" "}
        <a
          href="https://www.frontendmentor.io?ref=challenge"
          rel="noreferrer"
          target="_blank"
        >
          Frontend Mentor
        </a>
        . Coded by <a href="#">Jomar H. Cui</a>.
      </footer>
    </div>
  );
};

export default Home;
