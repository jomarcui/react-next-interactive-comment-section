import { useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";

import styles from "../styles/Home.module.css";

import * as Types from "../types/comment";
import * as Styles from "./index.styles";

import data from "../data/data.json";

import ComponentsCommentList from "../components/comment/list";
import ComponentsCommentNew from "../components/comment/new";

const LOCAL_STORAGE_KEY = "comments";

const fetcher = async (url: string) => {
  const response = await fetch(url);
  const data = await response.json();

  if (response.status !== 200) {
    throw new Error(data.message);
  }

  return data;
};

const getLocalStorageData = (localStorageKey: string) => {
  const storedData = localStorage.getItem(localStorageKey);

  if (storedData) {
    return JSON.parse(storedData);
  }

  localStorage.setItem(localStorageKey, JSON.stringify(data));

  return data;
};

const Home: NextPage = () => {
  const [comments, setComments] = useState<Types.Comment[]>([]);
  const [currentUser, setCurrentUser] = useState<Types.User>({
    image: {
      png: "/./images/avatars/image-juliusomo.png",
      webp: "/./images/avatars/image-juliusomo.webp",
    },
    username: "juliusomo",
  });
  const [loading, setLoading] = useState(true);

  const submitComment = (comment: Types.Comment) => {
    const updatedComments = [...comments, comment];

    setComments(updatedComments);
  };

  useEffect(() => {
    setLoading(true);

    const data = getLocalStorageData(LOCAL_STORAGE_KEY);

    setComments(data.comments as Types.Comment[]);
    setCurrentUser(data.currentUser as Types.User);

    setLoading(false);
  }, []);

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Frontend Mentor | Interactive Comment Section</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Styles.Main>
        <ComponentsCommentList
          comments={comments}
          currentUser={currentUser}
          setComments={setComments}
        />
        <ComponentsCommentNew currentUser={currentUser} submitComment={submitComment} />
      </Styles.Main>

      <footer className={styles.attribution}>
        Challenge by{" "}
        <a
          href="https://www.frontendmentor.io?ref=challenge"
          rel="noreferrer"
          target="_blank"
        >
          Frontend Mentor
        </a>
        . Coded by <a href="#">Jomar H. Cui</a>.
      </footer>
    </div>
  );
};

export default Home;
